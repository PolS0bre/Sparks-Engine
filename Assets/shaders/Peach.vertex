#version 330 core

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 color;
layout (location = 2) in vec3 normal;

out vec3 vertexColor;
out vec3 vertexNormal;
out vec3 lightDirection;

uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform float lightY;
uniform float lightX;

void main(){
	vec3 lightPos = vec3(lightX, lightY, 1);
	vec4 vertexPos = modelMatrix * vec4(position, 1.0);
	gl_Position = projectionMatrix * viewMatrix * vertexPos;
	vertexColor = color;
	vertexNormal = (modelMatrix * vec4(normal, 0.0)).xyz;
	lightDirection = lightPos - vertexPos.xyz;
}
